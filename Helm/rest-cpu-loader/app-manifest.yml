apiVersion: apps/v
kind: Deployment
metadata:
  name: rest-cpu-loader-ms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest-cpu-loader
  template:  
    metadata:
      labels:
        app: rest-cpu-loader
    spec:
      containers:
        - name: rest-cpu-loader
          image: ecrboletia.com/rest-cpu-loader:1.0.0  
          ports:
            - containerPort: 8080           
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 8095
            initialDelaySeconds: 60
            periodSeconds: 10
---
#NodePort Services
apiVersion: v
kind: Service
metadata:
  name: rest-cpu-loader-nodeport-service
  labels:
    app: rest-cpu-loader
spec:
  type: NodePort
  selector:
    app: rest-cpu-loader
  ports:
    - port: 8080
      targetPort: 8080
---
#Deploy Ingress
apiVersion: networking.k8s.io/v
kind: Ingress
metadata:
  name: ingress-rest-cpu-loader-service
  labels:
    app: rest-cpu-loader
  annotations:
    # Ingress Core Settings
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance


    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200,404'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rest-cpu-loader-nodeport-service
                port:
                  number: 8080